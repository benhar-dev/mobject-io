<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MAIN" Id="{281fb6ec-b826-070c-22e1-d9136e19a5d9}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	
	jsonPath : JsonPath;
	json : T_MAXSTRING := '{"factory":{"machines":[{"name":"module 1","in-production":true,"speed":122.2,"produced":608},{"name":"module 2","in-production":false,"speed":543.2,"produced":24}]}}';

	machineName : STRING;
	inProduction : BOOL;
	speed : LREAL;
	produced : INT;
	myInt : INT;
	
	hresult : HRESULT;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// setup the json reader with the supplied json

jsonPath.Parse(json);

// all paths are found and can be automatically converted to the supplied destination variables

hresult := jsonPath.TryRead('factory.machines[0].name',machineName); // hresult = S_OK, machineName = 'module 1'
hresult := jsonPath.TryRead('.factory.machines[0].in-production',inProduction); // hresult = S_OK, inProduction = true
hresult := jsonPath.TryRead('$$factory.machines[1].speed',speed); // hresult = S_OK, speed = 543.2
hresult := jsonPath.TryRead('$$.[$'factory$'].machines[1].produced',produced); // hresult = S_OK, produced = 24

// this will fail as 122.2 cannot be automatically converted to the type INT without data loss. 

hresult := jsonPath.TryRead('.factory.machines[0].speed',myInt); // hresult = INCOMPATIBLE, myInt = no change

// this will fail as the property 'hello' cannot be found. 

hresult := jsonPath.TryRead('.factory.machines[0].hello',myInt); // hresult = NOTFOUND, myInt = no change]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>