<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="JsonPath_TestSuit" Id="{7353a755-04a4-0396-3ad9-6c124d93b2f5}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK JsonPath_TestSuit EXTENDS TcUnit.FB_TestSuite
VAR
	jsonPath : JsonPath;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[ReadBoolFromJsonString();
ReadIntFromJsonString();
ReadDIntFromJsonString();
ReadUDIntFromJsonString();
ReadRealFromJsonString();
ReadLRealFromJsonString();
ReadStringFromJsonString();]]></ST>
    </Implementation>
    <Method Name="ReadBoolFromJsonString" Id="{e37d1d19-9657-078d-2375-46bea0933f5d}">
      <Declaration><![CDATA[METHOD PUBLIC ReadBoolFromJsonString
VAR_INPUT
END_VAR
VAR
	jsonTestString : T_MAXSTRING := '{"myTrueBool" : true, "myFalseBool" : false}';
	trueBool : BOOL := FALSE;
	falseBOOL : BOOL := TRUE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('ReadBoolFromJsonString');

// @TEST-RUN
jsonPath.Parse(jsonTestString);
jsonPath.TryRead('.myTrueBool',trueBool);
jsonPath.TryRead('.myFalseBool',falseBool);

// @TEST-ASSERT
AssertTrue(Condition := trueBool, Message := 'jsonPath read boolean did not read true');
AssertFalse(Condition := falseBool, Message := 'jsonPath read boolean did not read false');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReadDIntFromJsonString" Id="{9897cd11-5c78-0b18-2744-8a7f57d61e93}">
      <Declaration><![CDATA[METHOD PUBLIC ReadDIntFromJsonString
VAR_INPUT
END_VAR
VAR
	jsonTestString : T_MAXSTRING := '{"myDInt" : 123}';
	Actual : DINT;
	Expected : DINT := 123;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('ReadDIntFromJsonString');

// @TEST-RUN
jsonPath.Parse(jsonTestString);
jsonPath.TryRead('.myDInt',Actual);

// @TEST-ASSERT
AssertEquals(Expected := Expected, Actual := Actual, Message := 'jsonPath did not read correct value');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReadIntFromJsonString" Id="{fced8a31-5c85-06b8-1e35-bde36268d12b}">
      <Declaration><![CDATA[METHOD PUBLIC ReadIntFromJsonString
VAR_INPUT
END_VAR
VAR
	jsonTestString : T_MAXSTRING := '{"myInt" : 123}';
	Actual : INT;
	Expected : INT := 123;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('ReadIntFromJsonString');

// @TEST-RUN
jsonPath.Parse(jsonTestString);
jsonPath.TryRead('.myInt',Actual);

// @TEST-ASSERT
AssertEquals(Expected := Expected, Actual := Actual, Message := 'jsonPath did not read correct value');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReadLRealFromJsonString" Id="{af02ddbc-9d4c-0334-1b2a-f1c8e10d29ed}">
      <Declaration><![CDATA[METHOD PUBLIC ReadLRealFromJsonString
VAR_INPUT
END_VAR
VAR
	jsonTestString : T_MAXSTRING := '{"myLReal" : -123.1}';
	Actual : LREAL;
	Expected : LREAL := -123.1;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('ReadLRealFromJsonString');

// @TEST-RUN
jsonPath.Parse(jsonTestString);
jsonPath.TryRead('.myLReal',Actual);

// @TEST-ASSERT
AssertEquals(Expected := Expected, Actual := Actual, Message := 'jsonPath did not read correct value');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReadRealFromJsonString" Id="{be57d29f-ff81-00de-3ba0-89317c413f8d}">
      <Declaration><![CDATA[METHOD PUBLIC ReadRealFromJsonString
VAR_INPUT
END_VAR
VAR
	jsonTestString : T_MAXSTRING := '{"myReal" : 123.1}';
	Actual : REAL;
	Expected : REAL := 123.1;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('ReadRealFromJsonString');

// @TEST-RUN
jsonPath.Parse(jsonTestString);
jsonPath.TryRead('.myReal',Actual);

// @TEST-ASSERT
AssertEquals(Expected := Expected, Actual := Actual, Message := 'jsonPath did not read correct value');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReadStringFromJsonString" Id="{1e3c43e2-aaa0-0a2b-1da9-f046afdcf0dc}">
      <Declaration><![CDATA[METHOD PUBLIC ReadStringFromJsonString
VAR_INPUT
END_VAR
VAR
	jsonTestString : T_MAXSTRING := '{"myString" : "test"}';
	Actual : T_MAXSTRING;
	Expected : T_MAXSTRING := 'test';
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('ReadStringFromJsonString');

// @TEST-RUN
jsonPath.Parse(jsonTestString);
jsonPath.TryRead('.myString',Actual);

// @TEST-ASSERT
AssertEquals(Expected := Expected, Actual := Actual, Message := 'jsonPath did not read correct value');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReadUDIntFromJsonString" Id="{0e8a982d-0d77-091d-3965-8a72a54585d2}">
      <Declaration><![CDATA[METHOD PUBLIC ReadUDIntFromJsonString
VAR_INPUT
END_VAR
VAR
	jsonTestString : T_MAXSTRING := '{"myUDInt" : 123}';
	Actual : UDINT;
	Expected : UDINT := 123;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('ReadUDIntFromJsonString');

// @TEST-RUN
jsonPath.Parse(jsonTestString);
jsonPath.TryRead('.myUDInt',Actual);

// @TEST-ASSERT
AssertEquals(Expected := Expected, Actual := Actual, Message := 'jsonPath did not read correct value');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>